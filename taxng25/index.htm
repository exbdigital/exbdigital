<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Nigeria Personal Income Tax Calculator (Updated Rates)</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
    </style>
</head>

<body class="bg-gray-100 flex items-center justify-center min-h-screen p-4">
    <div class="w-full max-w-2xl bg-white rounded-2xl shadow-lg p-6 md:p-8">

        <div class="text-center mb-8">
            <h1 class="text-2xl md:text-3xl font-bold text-gray-800">Personal Income Tax Calculator</h1>
            <p class="text-gray-500 mt-2">Using your specified rates</p>
        </div>

        <!-- Input Section -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
            <div class="md:col-span-2">
                <label for="grossIncome" class="block text-sm font-medium text-gray-700 mb-1">Gross Annual Income
                    (₦)</label>
                <input type="text" id="grossIncome"
                    class="w-full px-4 py-3 bg-gray-50 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
                    placeholder="e.g., 5,000,000">
            </div>
            <div>
                <label for="pensionContribution" class="block text-sm font-medium text-gray-700 mb-1">Annual Pension
                    Contribution (₦)</label>
                <input type="text" id="pensionContribution"
                    class="w-full px-4 py-3 bg-gray-50 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
                    placeholder="e.g., 400,000">
            </div>
            <div>
                <label for="nhfContribution" class="block text-sm font-medium text-gray-700 mb-1">Annual NHF
                    Contribution (₦)</label>
                <input type="text" id="nhfContribution"
                    class="w-full px-4 py-3 bg-gray-50 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
                    placeholder="e.g., 125,000">
            </div>
        </div>
        <button id="calculateBtn"
            class="w-full bg-blue-600 text-white font-bold py-3 px-4 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-4 focus:ring-blue-300 transition duration-300 ease-in-out transform hover:-translate-y-0.5">
            Calculate Tax
        </button>

        <!-- Results Section -->
        <div id="results" class="hidden mt-8 space-y-6">
            <div class="bg-blue-50 border-l-4 border-blue-500 p-4 rounded-r-lg text-center">
                <p class="text-sm text-blue-700">Total Tax Payable:</p>
                <p id="totalTax" class="text-3xl font-bold text-blue-900"></p>
                <p id="minTaxApplied" class="text-xs text-blue-600 font-semibold mt-1 hidden">(Minimum tax of 1% of
                    gross income was applied)</p>
            </div>

            <!-- Net Income Summary -->
            <div class="bg-green-50 border-l-4 border-green-500 p-4 rounded-r-lg">
                <h3 class="text-lg font-semibold text-green-800 mb-3">Net Income Summary:</h3>
                <div class="space-y-2 text-sm">
                    <div class="flex justify-between"><span class="text-gray-600">Net Annual Income:</span> <span
                            id="netAnnualIncome" class="font-bold text-green-900 text-base"></span></div>
                    <div class="flex justify-between"><span class="text-gray-600">Net Monthly Income:</span> <span
                            id="netMonthlyIncome" class="font-bold text-green-900 text-base"></span></div>
                </div>
            </div>

            <!-- Taxable Income Summary -->
            <div class="border-t pt-6">
                <h3 class="text-lg font-semibold text-gray-700 mb-3">Taxable Income Summary:</h3>
                <div class="space-y-2 text-sm">
                    <div class="flex justify-between"><span class="text-gray-600">Gross Annual Income:</span> <span
                            id="summaryGross" class="font-medium text-gray-800"></span></div>
                    <div class="flex justify-between text-red-600"><span class="text-red-500">Consolidated Relief
                            Allowance (CRA):</span> <span id="summaryCRA" class="font-medium"></span></div>
                    <div class="flex justify-between text-red-600"><span class="text-red-500">Pension
                            Contribution:</span> <span id="summaryPension" class="font-medium"></span></div>
                    <div class="flex justify-between text-red-600"><span class="text-red-500">NHF Contribution:</span>
                        <span id="summaryNHF" class="font-medium"></span></div>
                    <div class="flex justify-between pt-2 border-t mt-2"><span
                            class="font-semibold text-gray-800">Chargeable Income:</span> <span id="summaryTaxable"
                            class="font-bold text-gray-900"></span></div>
                </div>
            </div>

            <!-- Tax Calculation Breakdown -->
            <div class="border-t pt-6">
                <h3 class="text-lg font-semibold text-gray-700 mb-3">Tax Calculation Breakdown:</h3>
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th scope="col"
                                    class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Income Band</th>
                                <th scope="col"
                                    class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Rate</th>
                                <th scope="col"
                                    class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Tax on Band</th>
                            </tr>
                        </thead>
                        <tbody id="breakdownBody" class="bg-white divide-y divide-gray-200">
                            <!-- Breakdown rows will be inserted here by JavaScript -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div id="error" class="hidden mt-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg"
            role="alert">
            <strong class="font-bold">Invalid Input!</strong>
            <span class="block sm:inline">Please enter a valid number for all fields.</span>
        </div>

    </div>

    <script>
        const calculateBtn = document.getElementById('calculateBtn');
        const grossIncomeInput = document.getElementById('grossIncome');
        const pensionContributionInput = document.getElementById('pensionContribution');
        const nhfContributionInput = document.getElementById('nhfContribution');

        const resultsDiv = document.getElementById('results');
        const totalTaxEl = document.getElementById('totalTax');
        const minTaxAppliedEl = document.getElementById('minTaxApplied');
        const breakdownBody = document.getElementById('breakdownBody');
        const errorDiv = document.getElementById('error');

        const summaryGross = document.getElementById('summaryGross');
        const summaryCRA = document.getElementById('summaryCRA');
        const summaryPension = document.getElementById('summaryPension');
        const summaryNHF = document.getElementById('summaryNHF');
        const summaryTaxable = document.getElementById('summaryTaxable');

        const netAnnualIncomeEl = document.getElementById('netAnnualIncome');
        const netMonthlyIncomeEl = document.getElementById('netMonthlyIncome');

        // Tax bands as per your request
        const taxBands = [
            { limit: 800000, rate: 0.00 },
            { limit: 2200000, rate: 0.15 },
            { limit: 9000000, rate: 0.18 },
            { limit: 13000000, rate: 0.21 },
            { limit: 25000000, rate: 0.23 },
            { limit: Infinity, rate: 0.25 }
        ];

        function formatCurrency(amount) {
            return new Intl.NumberFormat('en-NG', { style: 'currency', currency: 'NGN', minimumFractionDigits: 2 }).format(amount);
        }

        function parseFormattedNumber(str) {
            if (typeof str !== 'string') return 0;
            return parseFloat(str.replace(/,/g, '')) || 0;
        }

        function formatInputAsNumber(e) {
            let value = e.target.value.replace(/[^0-9.]/g, ''); // Allow decimal for manual entry
            const parts = value.split('.');
            let integerPart = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ',');
            let formattedValue = parts.length > 1 ? integerPart + '.' + parts[1] : integerPart;
            e.target.value = formattedValue;
        }

        // Simplified formatter for inputs to avoid parsing complexities during entry
        function liveFormat(e) {
            let value = e.target.value.replace(/[^0-9]/g, '');
            if (value) {
                e.target.value = new Intl.NumberFormat('en-NG').format(parseInt(value, 10));
            } else {
                e.target.value = '';
            }
        }

        [grossIncomeInput, pensionContributionInput, nhfContributionInput].forEach(input => {
            input.addEventListener('input', liveFormat);
        });


        calculateBtn.addEventListener('click', () => {
            const grossIncome = parseFormattedNumber(grossIncomeInput.value);
            const pensionContribution = parseFormattedNumber(pensionContributionInput.value);
            const nhfContribution = parseFormattedNumber(nhfContributionInput.value);

            if (isNaN(grossIncome) || grossIncome <= 0) {
                errorDiv.classList.remove('hidden');
                resultsDiv.classList.add('hidden');
                return;
            }

            errorDiv.classList.add('hidden');

            const cra = Math.max(200000, 0.01 * grossIncome) + (0.2 * grossIncome);
            const totalDeductions = cra + pensionContribution + nhfContribution;
            let chargeableIncome = Math.max(0, grossIncome - totalDeductions);

            let taxFromBands = 0;
            let remainingIncome = chargeableIncome;
            let cumulativeLimit = 0;
            breakdownBody.innerHTML = '';

            for (const band of taxBands) {
                if (remainingIncome <= 0) break;

                const taxableInBand = Math.min(remainingIncome, band.limit);
                const taxInBand = taxableInBand * band.rate;
                taxFromBands += taxInBand;

                const newRow = document.createElement('tr');
                let bandDescription = '';
                if (band.limit === Infinity) {
                    bandDescription = `Above ${formatCurrency(cumulativeLimit).replace('₦', '').trim()}`;
                } else {
                    bandDescription = cumulativeLimit === 0 ? `First ${formatCurrency(band.limit)}` : `Next ${formatCurrency(band.limit)}`;
                }

                newRow.innerHTML = `
                    <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-500">${bandDescription}</td>
                    <td class="px-4 py-4 whitespace-nowrap text-sm text-gray-500">${band.rate * 100}%</td>
                    <td class="px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900">${formatCurrency(taxInBand)}</td>
                `;
                breakdownBody.appendChild(newRow);

                remainingIncome -= taxableInBand;
                if (band.limit !== Infinity) cumulativeLimit += band.limit;
            }

            if (chargeableIncome === 0) {
                breakdownBody.innerHTML = `<tr><td colspan="3" class="text-center py-4 text-sm text-gray-500">No tax payable on bands as chargeable income is zero.</td></tr>`;
            }

            const minimumTax = 0.01 * grossIncome;
            let finalTax = Math.max(taxFromBands, minimumTax);

            if (grossIncome === 0) finalTax = 0;

            // Calculate Net Income
            const netAnnualIncome = grossIncome - finalTax - pensionContribution - nhfContribution;
            const netMonthlyIncome = netAnnualIncome / 12;

            // Update UI
            summaryGross.textContent = formatCurrency(grossIncome);
            summaryCRA.textContent = `- ${formatCurrency(cra)}`;
            summaryPension.textContent = `- ${formatCurrency(pensionContribution)}`;
            summaryNHF.textContent = `- ${formatCurrency(nhfContribution)}`;
            summaryTaxable.textContent = formatCurrency(chargeableIncome);

            totalTaxEl.textContent = formatCurrency(finalTax);

            netAnnualIncomeEl.textContent = formatCurrency(netAnnualIncome);
            netMonthlyIncomeEl.textContent = formatCurrency(netMonthlyIncome);

            minTaxAppliedEl.classList.toggle('hidden', !(finalTax > 0 && finalTax === minimumTax && taxFromBands < minimumTax));
            resultsDiv.classList.remove('hidden');
        });
    </script>
</body>

</html>